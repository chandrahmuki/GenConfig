"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
const coc_nvim_1 = require("coc.nvim");
const utils_1 = require("./utils");
function activate(context) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const config = coc_nvim_1.workspace.getConfiguration().get('sh', {});
        if (config.enable === false) {
            return;
        }
        const command = config.commandPath || (yield utils_1.pkgBin('bash-language-server'));
        if (!(yield utils_1.commandExists(command))) {
            yield utils_1.pkgInstall('bash-language-server');
        }
        let serverOptions = {
            command,
            args: ['start'],
            transport: coc_nvim_1.TransportKind.stdio
        };
        let clientOptions = {
            documentSelector: ['sh']
        };
        const client = new coc_nvim_1.LanguageClient('sh', 'bash-language-server', serverOptions, clientOptions);
        context.subscriptions.push(coc_nvim_1.services.registLanguageClient(client), coc_nvim_1.commands.registerCommand("sh.version", () => tslib_1.__awaiter(this, void 0, void 0, function* () {
            const v = require(path_1.default.resolve(__dirname, '..', 'package.json')).version;
            coc_nvim_1.workspace.showMessage(`Version: ${v}`, 'more');
        })), coc_nvim_1.commands.registerCommand("sh.update.bash-language-server", () => tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield utils_1.pkgUpgrade('bash-language-server');
        })));
    });
}
exports.activate = activate;
//# sourceMappingURL=extension.js.map